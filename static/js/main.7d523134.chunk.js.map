{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","type","placeholder","onChange","searchChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredMonster","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,G,kBAAO,SAACC,GACjB,OACI,yBAAKC,UAAU,kBACX,yBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCPjBC,EAAW,SAACR,GACrB,OACI,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCLnCQ,G,MAAY,SAACZ,GACtB,OACI,2BACIa,KAAK,SACLC,YAAY,iBACZC,SAAUf,EAAMgB,aAChBf,UAAU,aC0BPgB,E,kDA7BX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTT,SAAU,GACVU,YAAa,IAJP,E,gEAOO,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,+BAEzC,IAAD,SAC6BE,KAAKR,MAA/BT,EADH,EACGA,SAAUU,EADb,EACaA,YACZQ,EAAkBlB,EAASmB,QAAO,SAACxB,GAAD,OACpCA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAIpD,OACI,yBAAK5B,UAAU,OACX,+CACA,kBAAC,EAAD,CAAWe,aALE,SAACe,GAAD,OACjB,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAKlC,kBAAC,EAAD,CAAUxB,SAAUkB,S,GAxBlBO,a,MCAlBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.7d523134.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                alt=\"monster\"\r\n                src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n            />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = (props) => {\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            placeholder=\"search-monster\"\r\n            onChange={props.searchChange}\r\n            className=\"search\"\r\n        />\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: \"\",\n        };\n    }\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((res) => res.json())\n            .then((users) => this.setState({ monsters: users }));\n    }\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonster = monsters.filter((monster) =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        const searchChange = (e) =>\n            this.setState({ searchField: e.target.value });\n        return (\n            <div className=\"App\">\n                <h1>Monster Rolodex</h1>\n                <SearchBox searchChange={searchChange} />\n                <CardList monsters={filteredMonster} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}